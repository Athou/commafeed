# CommaFeed settings
# ------------------
app:
  # url used to access commafeed
  publicUrl: http://localhost:8082/

  # whether to expose a robots.txt file that disallows web crawlers and search engine indexers
  hideFromWebCrawlers: true
  
  # whether to allow user registrations
  allowRegistrations: true

  # whether to enable strict password validation (1 uppercase char, 1 lowercase char, 1 digit, 1 special char)
  strictPasswordPolicy: true
  
  # create a demo account the first time the app starts
  createDemoAccount: true
  
  # put your google analytics tracking code here
  googleAnalyticsTrackingCode:
  
  # put your google server key (used for youtube favicon fetching)
  googleAuthKey:
  
  # number of http threads
  backgroundThreads: 3
  
  # number of database updating threads
  databaseUpdateThreads: 1

  # rows to delete per query while cleaning up old entries
  databaseCleanupBatchSize: 100

  # settings for sending emails (password recovery)
  smtpHost: localhost
  smtpPort: 25
  smtpTls: false
  smtpUserName: user
  smtpPassword: pass
  smtpFromAddress:

  # Graphite Metric settings
  # Allows those who use Graphite to have CommaFeed send metrics for graphing (time in seconds)
  graphiteEnabled: false
  graphitePrefix: "test.commafeed"
  graphiteHost: "localhost"
  graphitePort: 2003
  graphiteInterval: 60
  
  # whether this commafeed instance has a lot of feeds to refresh
  # leave this to false in almost all cases
  heavyLoad: false
  
  # minimum amount of time commafeed will wait before refreshing the same feed
  refreshIntervalMinutes: 5

  # if enabled, images in feed entries will be proxied through the server instead of accessed directly by the browser
  # useful if commafeed is usually accessed through a restricting proxy  
  imageProxyEnabled: true
  
  # database query timeout (in milliseconds), 0 to disable
  queryTimeout: 0
  
  # time to keep unread statuses (in days), 0 to disable
  keepStatusDays: 0
  
  # entries to keep per feed, old entries will be deleted, 0 to disable
  maxFeedCapacity: 500

  # entries older than this will be deleted, 0 to disable
  maxEntriesAgeDays: 365

  # limit the number of feeds a user can subscribe to, 0 to disable
  maxFeedsPerUser: 0

  # don't parse feeds that are too large to prevent memory issues
  maxFeedResponseSize: 5M

  # cache service to use, possible values are 'noop' and 'redis'
  cache: noop
  
  # announcement string displayed on the main page
  announcement:
  
  # user-agent string that will be used by the http client, leave empty for the default one
  userAgent:

  # enable websocket connection so the server can notify the web client that there are new entries for your feeds
  websocketEnabled: true

  # interval at which the client will send a ping message on the websocket to keep the connection alive
  websocketPingInterval: 15m

  # if websocket is disabled or the connection is lost, the client will reload the feed tree at this interval
  treeReloadInterval: 30s

# Database connection
# -------------------  
# for MariaDB
# driverClass is org.mariadb.jdbc.Driver
# url is jdbc:mariadb://localhost/commafeed?autoReconnect=true&failOverReadOnly=false&maxReconnects=20&rewriteBatchedStatements=true&timezone=UTC
#
# for MySQL
# driverClass is com.mysql.cj.jdbc.Driver
# url is jdbc:mysql://localhost/commafeed?autoReconnect=true&failOverReadOnly=false&maxReconnects=20&rewriteBatchedStatements=true&timezone=UTC
#
# for PostgreSQL
# driverClass is org.postgresql.Driver
# url is jdbc:postgresql://localhost:5432/commafeed

database:
  driverClass: org.h2.Driver
  url: jdbc:h2:./target/commafeed
  user: sa
  password: sa
  properties:
    charSet: UTF-8
  validationQuery: "/* CommaFeed Health Check */ SELECT 1"

server:
  applicationConnectors:
    - type: http
      port: 8083
  adminConnectors:
    - type: http
      port: 8084

logging:
  level: INFO
  loggers:
    com.commafeed: DEBUG
    liquibase: INFO
    org.hibernate.SQL: INFO # or ALL for sql debugging
    org.hibernate.engine.internal.StatisticalLoggingSessionEventListener: WARN
  appenders:
    - type: console
    - type: file
      currentLogFilename: log/commafeed.log
      threshold: ALL
      archive: true
      archivedLogFilenamePattern: log/commafeed-%d.log
      archivedFileCount: 5
      timeZone: UTC

# Redis pool configuration
# (only used if app.cache is 'redis')
# -----------------------------------
redis:
  host: localhost
  port: 6379
  # username is only required when using ACLs
  username:
  password:
  timeout: 2000
  database: 0
  maxTotal: 500
   