name: ci
permissions:
  contents: read

on:
  push:
  pull_request:

env:
  JAVA_VERSION: 21
  DOCKER_BUILD_SUMMARY: false

jobs:
  build:
    if: github.event_name != 'pull_request' || github.actor != 'renovate[bot]' # renovate already triggers the build on pushes

    strategy:
      matrix:
        os: [ "ubuntu-latest", "ubuntu-22.04-arm", "windows-latest" ]
        database: [ "h2", "postgresql", "mysql", "mariadb" ]

    runs-on: ${{ matrix.os }}
    steps:
      # Checkout
      - name: Configure git to checkout as-is
        run: git config --global core.autocrlf false

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      # Setup
      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@271a696e78d05dd482037cfacbfbfdf54c2c44a8 # v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "graalvm"
          cache: "maven"

      - name: Install Playwright dependencies
        run: sudo apt-get install -y libgbm1
        if: matrix.os != 'windows-latest'

      # Build & Test
      - name: Build with Maven
        run: mvn --batch-mode --no-transfer-progress install -Pnative -P${{ matrix.database }} -DskipTests=${{ matrix.os == 'windows-latest' && matrix.database != 'h2' }}

      # Build pages
      - name: Copy generated markdown documentation to /documentation
        run: mkdir documentation && cp ./commafeed-server/target/quarkus-generated-doc/config/commafeed-server.md ./documentation/README.md

      - name: Generate pages
        uses: wranders/markdown-to-pages-action@8d8a750832932ac785f5424c8c5543aa0b26bb9a # v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          out_path: target/pages
          files: |-
            README.md
            documentation/README.md
      
      # Upload artifacts
      - name: Upload cross-platform app
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        if: matrix.os == 'ubuntu-latest' # we only need to upload the cross-platform artifact once per database
        with:
          name: commafeed-${{ matrix.database }}-jvm
          path: commafeed-server/target/commafeed-*.zip

      - name: Upload native executable
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        with:
          name: commafeed-${{ matrix.database }}-${{ runner.os }}-${{ runner.arch }}
          path: commafeed-server/target/commafeed-*-runner*

      - name: Upload pages
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3
        if: matrix.os == 'ubuntu-latest' && matrix.database == 'h2' # we only need to upload the pages once
        with:
          path: target/pages

  docker:
    runs-on: ubuntu-latest
    needs: build
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

    strategy:
      matrix:
        database: [ "h2", "postgresql", "mysql", "mariadb" ]

    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      # Setup
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: Install required packages
        run: sudo apt-get install -y rename unzip

      # Prepare artifacts
      - name: Download artifacts
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4
        with:
          pattern: commafeed-${{ matrix.database }}-*
          path: ./artifacts
          merge-multiple: true

      - name: Set the exec flag on the native executables
        run: chmod +x artifacts/*-runner

      - name: Rename native executables to match buildx TARGETARCH
        run: |
          rename 's/x86_64/amd64/g' artifacts/*
          rename 's/aarch_64/arm64/g' artifacts/*

      - name: Unzip jvm package
        run: |
          unzip artifacts/*-jvm.zip -d artifacts/extracted-jvm-package
          rename 's/commafeed-.*/quarkus-app/g' artifacts/extracted-jvm-package/*

      # Docker
      - name: Login to Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        if: ${{ env.DOCKERHUB_USERNAME != '' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      ## build but don't push for PRs and renovate
      - name: Docker build - native
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          context: .
          file: commafeed-server/src/main/docker/Dockerfile.native
          push: false
          platforms: linux/amd64,linux/arm64/v8

      - name: Docker build - jvm
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          context: .
          file: commafeed-server/src/main/docker/Dockerfile.jvm
          push: false
          platforms: linux/amd64,linux/arm64/v8

      ## build and push tag
      - name: Docker build and push tag - native
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        if: ${{ github.ref_type == 'tag' }}
        with:
          context: .
          file: commafeed-server/src/main/docker/Dockerfile.native
          push: ${{ env.DOCKERHUB_USERNAME != '' }}
          platforms: linux/amd64,linux/arm64/v8
          tags: |
            athou/commafeed:latest-${{ matrix.database }}
            athou/commafeed:${{ github.ref_name }}-${{ matrix.database }}

      - name: Docker build and push tag - jvm
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        if: ${{ github.ref_type == 'tag' }}
        with:
          context: .
          file: commafeed-server/src/main/docker/Dockerfile.jvm
          push: ${{ env.DOCKERHUB_USERNAME != '' }}
          platforms: linux/amd64,linux/arm64/v8
          tags: |
            athou/commafeed:latest-${{ matrix.database }}-jvm
            athou/commafeed:${{ github.ref_name }}-${{ matrix.database }}-jvm

      ## build and push master
      - name: Docker build and push master - native
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        if: ${{ github.ref_name == 'master' }}
        with:
          context: .
          file: commafeed-server/src/main/docker/Dockerfile.native
          push: ${{ env.DOCKERHUB_USERNAME != '' }}
          platforms: linux/amd64,linux/arm64/v8
          tags: athou/commafeed:master-${{ matrix.database }}

      - name: Docker build and push master - jvm
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        if: ${{ github.ref_name == 'master' }}
        with:
          context: .
          file: commafeed-server/src/main/docker/Dockerfile.jvm
          push: ${{ env.DOCKERHUB_USERNAME != '' }}
          platforms: linux/amd64,linux/arm64/v8
          tags: athou/commafeed:master-${{ matrix.database }}-jvm

  release:
    runs-on: ubuntu-latest
    needs:
      - build
      - docker
    permissions:
      contents: write
    if: github.ref_type == 'tag'

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4
        with:
          pattern: commafeed-*
          path: ./artifacts
          merge-multiple: true

      - name: Set the exec flag on the native executables
        run: chmod +x artifacts/*-runner

      - name: Extract Changelog Entry
        uses: mindsers/changelog-reader-action@32aa5b4c155d76c94e4ec883a223c947b2f02656 # v2
        id: changelog_reader
        with:
          version: ${{ github.ref_name }}

      - name: Create GitHub release
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # v1
        with:
          name: CommaFeed ${{ github.ref_name }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          artifacts: ./artifacts/*


  update-dockerhub-description:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@e98e4d1628a5f3be2be7c231e50981aee98723ae # v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: athou/commafeed
          short-description: ${{ github.event.repository.description }}
          readme-filepath: commafeed-server/src/main/docker/README.md


  deploy-pages:
    runs-on: ubuntu-latest
    needs: release
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
        id: deployment
